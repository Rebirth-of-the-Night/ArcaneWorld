buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://jitpack.io' }
        maven { url = 'https://maven.minecraftforge.net' }
    }
    dependencies {
        classpath('com.github.DStrand1:ForgeGradle:FG_2.3-SNAPSHOT') {
            changing = true
        }
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = '1.12.2-0.0.15'
group = 'party.lemons'
archivesBaseName = 'arcaneworld'

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = '1.12.2-14.23.5.2847'
    runDir = 'run'
    mappings = 'stable_39'
}

repositories {
    maven { url 'https://www.cursemaven.com' }
    maven {
        // location of the maven that hosts JEI files
        name = 'Progwml6 maven'
        url = 'https://dvs1.progwml6.com/files/maven'
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = 'ModMaven'
        url = 'modmaven.k-4u.nl'
    }
    maven { url 'https://maven.blamejared.com/' }
}

configurations {
    contained
    contained.transitive = false
}

dependencies {
    deobfCompile 'mezz.jei:jei_1.12.2:4.16.1.302'
    deobfCompile 'CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.20.641'
    deobfProvided 'curse.maven:lemonlib-306926:2639879'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from(configurations.contained.files){
        include '*'
        into 'META-INF/libraries'
    }

    manifest {
        attributes([
                'Maven-Artifact': '${project.group}:${project.archivesBaseName}:${project.version}',
                'Timestamp'     : System.currentTimeMillis()
        ])
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
}
